package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"log"

	"github.com/a-agmon/gql-parquet-api/pkg/model"
)

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*model.User, error) {
	res, err := r.db.GetUsers()
	if err != nil {
		log.Printf("error getting users: %v", err)
		return nil, err
	}
	return res, nil
}

// GetUserByEmailDomain is the resolver for the getUserByEmailDomain field.
func (r *queryResolver) GetUserByEmailDomain(ctx context.Context, domain string) ([]*model.User, error) {
	res, err := r.db.GetUsersByEmailDomain(domain)
	if err != nil {
		log.Printf("error GetUsersByEmailDomain : %v", err)
		return nil, err
	}
	return res, nil
}

// GetUsersByEmail is the resolver for the getUsersByEmail field.
func (r *queryResolver) GetUsersByEmail(ctx context.Context, email string) ([]*model.User, error) {
	users, err := r.db.GetUsersByEmail(email)
	if err != nil {
		log.Printf("error GetUsersByEmail : %v", err)
		return nil, err
	}
	return users, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
